Voy a ayudarte a convertir la página de inicio de tu proyecto Ethos Coffe a una estructura MVC (Modelo-Vista-Controlador). Esto mejorará la organización y mantenimiento de tu código siguiendo los principios SOLID que ya estás implementando en otras partes de tu proyecto.
Plan de Conversión a MVC para la Página de Inicio
Analizando tu estructura actual, veo que tienes un index.php que mezcla la lógica de presentación con algo de lógica de negocio. Vamos a separar esto en los componentes MVC correspondientes.

# Estructura MVC para Ethos Coffe - Página de Inicio

## Estructura de Directorios Propuesta

```
d:\pruebas-ds
├── src
│   ├── Auth/                             # Mantener estructura existente
│   ├── Config/                           # Mantener estructura existente
│   ├── core
│   │   ├── Controller/                     # Controladores de la aplicación
│   │   │   ├── BaseController.php          # Controlador base con funcionalidades comunes
│   │   │   └── HomeController.php          # Controlador para la página principal
│   │   ├── Database/                       # Configuración y conexión a la base de datos
│   │   ├── Model/                          # Modelos de datos de la aplicación
│   │   ├── Router.php                      # Enrutador principal de la aplicación
│   │   └── View/                           # Vistas de la aplicación
│   │       ├── templates/                  # Plantillas compartidas (header, footer, etc.)
│   │           ├── ayuda.php              # Plantilla específica para la sección de ayuda
│   │           ├── footer.php             # Pie de página común para todas las vistas
│   │           ├── header.php             # Encabezado común para todas las vistas
│   │           ├── index.php              # Plantilla principal para la página de inicio
│   │           └── servicios.php          # Plantilla específica para la sección de servicios
│   │       ├── home/                       # Vistas específicas para la página de inicio
│   │       │   └── index.php               # Vista principal de la página de inicio
│   │       
│   │      
│   │       
│   │           
│   ├── Shop/                             # Mantener estructura existente
├── CSS/                                  # Mantener estructura existente
├── HTML/                                 # Mantener estructura existente
├── PHP/                                  # Mantener estructura existente
└── index.php                             # Punto de entrada - ahora será mucho más simple
```

## Componentes del MVC

### 1. Modelo
Aunque la página de inicio no parece requerir un modelo específico por ahora, podrías necesitar uno para los productos destacados.

### 2. Vista
Separar la interfaz de usuario (HTML) de la lógica.

### 3. Controlador
Manejar las solicitudes del usuario y gestionar la lógica de la aplicación.

### 4. Router
Dirigir las solicitudes al controlador correcto basado en la URL.

## Flujo de la Aplicación MVC

1. El usuario solicita la página de inicio (index.php)
2. El index.php inicializa el Router
3. El Router determina que se requiere el HomeController
4. El HomeController procesa la solicitud y carga la vista apropiada
5. La vista renderiza los datos proporcionados por el controlador
6. La respuesta se envía al navegador del usuario

## Próximos Pasos
- Crear los archivos y directorios definidos en la estructura
- Implementar cada componente del MVC
- Migrar el código existente a la nueva estructura


Ahora, implementaré cada uno de los componentes necesarios para tu MVC, comenzando por el punto de entrada del sistema (index.php).
<?php
/**
 * Punto de entrada principal de la aplicación Ethos Coffe
 * Este archivo inicializa la aplicación y dirige las solicitudes al controlador apropiado
 */

// Cargar el monitor de rendimiento
require_once __DIR__ . '/PHP/load_monitor.php';
$monitor = new LoadMonitor();

// Iniciar la sesión
session_start();

// Configuración de autoload
require_once __DIR__ . '/src/Config/Config.php';
require_once __DIR__ . '/src/core/Router.php';

// Inicializar el router y procesar la solicitud
$router = new Router();
$router->dispatch();

// Finalizar el monitoreo al terminar la página
$monitor->finalize(http_response_code());

// Si estamos en modo de prueba, mostrar las métricas (solo para desarrollo)
if (isset($_GET['debug_metrics']) && $_GET['debug_metrics'] === 'true') {
    echo '<div style="background: #f8f9fa; border: 1px solid #ddd; padding: 15px; margin-top: 20px;">';
    echo '<h3>Métricas de Carga (Solo Debug)</h3>';
    echo '<pre>';
    print_r($monitor->getMetrics());
    echo '</pre>';
    echo '</div>';
}
?>

Ahora vamos a crear el Router que gestionará las peticiones:
<?php
/**
 * Router - Clase encargada de enrutar las peticiones HTTP a los controladores correspondientes
 */
class Router {
    // Variable para activar/desactivar mensajes de depuración
    private $debug = true;
    
    /**
     * Constructor de la clase Router
     */
    public function __construct() {
        // Inicializar el router
    }
    
    /**
     * Método de depuración para mostrar mensajes
     * 
     * @param mixed $message Mensaje o datos para mostrar
     * @return void
     */
    private function debugLog($message) {
        if ($this->debug) {
            echo '<div style="background: #f8f9fa; border: 1px solid #ddd; padding: 10px; margin: 5px; font-family: monospace;">';
            if (is_array($message) || is_object($message)) {
                echo '<pre>';
                print_r($message);
                echo '</pre>';
            } else {
                echo $message;
            }
            echo '</div>';
        }
    }
    
    /**
     * Método para analizar la URL y dirigir la solicitud al controlador adecuado
     */
    public function dispatch() {
        // Obtener la URL solicitada
        $requestUrl = isset($_SERVER['REQUEST_URI']) ? $_SERVER['REQUEST_URI'] : '/';
        
        // Eliminar parámetros GET de la URL
        $requestUrl = strtok($requestUrl, '?');
        
        // Eliminar la parte base de la URL
        $basePath = dirname($_SERVER['SCRIPT_NAME']);
        if($basePath != '/' && $basePath != '\\') {
            $requestUrl = substr($requestUrl, strlen($basePath));
        }
        
        $this->debugLog("URL solicitada: " . $requestUrl);
        $this->debugLog("Base Path: " . $basePath);
        
        // Si la URL está vacía o es '/', cargar la página de inicio
        if(empty($requestUrl) || $requestUrl == '/') {
            $this->debugLog("Cargando página de inicio...");
            
            // Buscar HomeController en múltiples ubicaciones posibles
            $controllerPaths = [
                __DIR__ . '/Controller/HomeController.php',
                __DIR__ . '/../Controller/HomeController.php',
                dirname(__DIR__) . '/Controller/HomeController.php',
                dirname(dirname(__DIR__)) . '/Controller/HomeController.php',
                $_SERVER['DOCUMENT_ROOT'] . '/src/core/Controller/HomeController.php'
            ];
            
            $controllerFound = false;
            
            foreach ($controllerPaths as $path) {
                $this->debugLog("Buscando controlador en: " . $path);
                
                if(file_exists($path)) {
                    $this->debugLog("¡Controlador encontrado! Cargando: " . $path);
                    require_once $path;
                    
                    if(class_exists('HomeController')) {
                        $controller = new HomeController();
                        if(method_exists($controller, 'index')) {
                            $controller->index();
                            $controllerFound = true;
                            break;
                        } else {
                            $this->debugLog("Error: El método 'index' no existe en HomeController");
                        }
                    } else {
                        $this->debugLog("Error: La clase 'HomeController' no está definida en el archivo");
                    }
                }
            }
            
            if (!$controllerFound) {
                $this->debugLog("No se pudo encontrar el controlador. Mostrando página de inicio temporal.");
                $this->showFallbackHome();
            }
            
            return;
        }
        
        // Dividir la URL en segmentos
        $segments = explode('/', trim($requestUrl, '/'));
        
        // El primer segmento es el controlador
        $controllerName = ucfirst(strtolower($segments[0])) . 'Controller';
        
        // Buscar el controlador en múltiples ubicaciones posibles
        $controllerPaths = [
            __DIR__ . '/Controller/' . $controllerName . '.php',
            __DIR__ . '/../Controller/' . $controllerName . '.php',
            dirname(__DIR__) . '/Controller/' . $controllerName . '.php',
            dirname(dirname(__DIR__)) . '/Controller/' . $controllerName . '.php',
            $_SERVER['DOCUMENT_ROOT'] . '/src/core/Controller/' . $controllerName . '.php'
        ];
        
        $controllerFound = false;
        
        foreach ($controllerPaths as $controllerFile) {
            $this->debugLog("Buscando controlador: " . $controllerFile);
            
            if(file_exists($controllerFile)) {
                $this->debugLog("Controlador encontrado: " . $controllerFile);
                require_once $controllerFile;
                
                if(class_exists($controllerName)) {
                    $controller = new $controllerName();
                    
                    // El segundo segmento es la acción (método) 
                    $action = isset($segments[1]) ? strtolower($segments[1]) : 'index';
                    
                    // Verificar si el método existe
                    if(method_exists($controller, $action)) {
                        // Llamar al método del controlador
                        call_user_func([$controller, $action]);
                        $controllerFound = true;
                        break;
                    } else {
                        $this->debugLog("Error: El método '$action' no existe en $controllerName");
                    }
                } else {
                    $this->debugLog("Error: La clase '$controllerName' no está definida en el archivo");
                }
            }
        }
        
        if (!$controllerFound) {
            // Controlador o método no encontrado
            $this->notFound();
        }
    }
    
    /**
     * Método para mostrar una página de inicio temporal
     */
    private function showFallbackHome() {
        echo '<!DOCTYPE html>
        <html lang="es">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Ethos Coffe - Inicio</title>
            <style>
                body { 
                    font-family: Arial, sans-serif; 
                    line-height: 1.6;
                    margin: 0;
                    padding: 20px;
                    color: #333;
                }
                .container { 
                    max-width: 1200px; 
                    margin: 0 auto; 
                    padding: 20px;
                }
                .hero { 
                    background-color: #f5f5f5;
                    padding: 50px 20px;
                    text-align: center;
                    margin-bottom: 30px;
                }
                h1 { color: #5D4037; }
                .btn {
                    display: inline-block;
                    background-color: #795548;
                    color: white;
                    padding: 10px 20px;
                    text-decoration: none;
                    border-radius: 5px;
                    margin-top: 20px;
                }
                .features {
                    display: flex;
                    flex-wrap: wrap;
                    justify-content: space-between;
                    margin-bottom: 30px;
                }
                .feature {
                    flex: 0 0 30%;
                    margin-bottom: 20px;
                    padding: 20px;
                    background-color: #f9f9f9;
                    border-radius: 5px;
                }
                footer {
                    background-color: #333;
                    color: white;
                    text-align: center;
                    padding: 20px;
                    margin-top: 40px;
                }
                @media (max-width: 768px) {
                    .feature {
                        flex: 0 0 100%;
                    }
                }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="hero">
                    <h1>Bienvenido a Ethos Coffe</h1>
                    <p>Tu destino para una experiencia de café excepcional.</p>
                    <a href="/PHP/productos.php" class="btn">Ver Productos</a>
                </div>
                
                <div class="features">
                    <div class="feature">
                        <h3>Productos de Alta Calidad</h3>
                    <div class="feature">
                        <h3>Envío Rápido</h3>
                        <p>Entendemos que quieres recibir tus productos lo antes posible. Te proporcionamos estimaciones realistas de tiempo de entrega.</p>
                    </div>
                    
                    <div class="feature">
                        <h3>Atención al Cliente</h3>
                <div>
                    <h2>Estamos trabajando en nuestro nuevo sitio</h2>
                    <p>Pronto tendremos disponible una experiencia de compra mejorada con nuestra nueva estructura MVC.</p>
                </div>
            </div>
            
            <footer>
                <p>&copy; ' . date('Y') . ' Ethos Coffe. Todos los derechos reservados.</p>
            </footer>
        </body>
        </html>';
    }
    
    /**
     * Método para manejar URLs no encontradas
     */
    private function notFound() {
        // Establecer el código de estado HTTP 404
        header("HTTP/1.0 404 Not Found");
        
        // Cargar una vista de error 404
        echo '<!DOCTYPE html>
        <html lang="es">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Error 404 - Página no encontrada</title>
            <style>
                body {
                    font-family: Arial, sans-serif;
                    line-height: 1.6;
                    color: #333;
                    max-width: 800px;
                    margin: 0 auto;
                    padding: 20px;
                    text-align: center;
                }
                h1 { color: #d32f2f; }
                .error-container {
                    background-color: #f5f5f5;
                    border-radius: 5px;
                    padding: 20px;
                    margin: 30px 0;
                }
                .back-link {
                    display: inline-block;
                    background-color: #795548;
                    color: white;
                    padding: 10px 20px;
                    text-decoration: none;
                    border-radius: 5px;
                    margin-top: 20px;
                }
                .debug-info {
                    margin-top: 30px;
                    text-align: left;
                    font-size: 14px;
                    background-color: #f9f9f9;
                    padding: 15px;
                    border-radius: 5px;
                }
            </style>
        </head>
        <body>
            <div class="error-container">
                <h1>Error 404 - Página no encontrada</h1>
                <p>Lo sentimos, la página que estás buscando no existe o ha sido movida.</p>
                <a href="/" class="back-link">Volver a la página de inicio</a>
            </div>';
            
        if ($this->debug) {
            echo '<div class="debug-info">
                <h3>Información de depuración:</h3>
                <p><strong>URL solicitada:</strong> ' . $_SERVER['REQUEST_URI'] . '</p>
                <p><strong>Script actual:</strong> ' . $_SERVER['SCRIPT_NAME'] . '</p>
                <p><strong>Document Root:</strong> ' . $_SERVER['DOCUMENT_ROOT'] . '</p>
                <p><strong>Base Path:</strong> ' . dirname($_SERVER['SCRIPT_NAME']) . '</p>
            </div>';
        }
            
        echo '</body>
        </html>';
        exit;
    }
}
?>
Ahora, creemos el controlador base y el controlador para la página de inicio:
<?php
/**
 * BaseController - Controlador base del que heredan todos los controladores
 * Proporciona funcionalidad común como la carga de vistas
 */
class BaseController {
    /**
     * Carga una vista y la renderiza con los datos proporcionados
     * 
     * @param string $view Nombre de la vista a cargar
     * @param array $data Datos a pasar a la vista
     * @return void
     */
    protected function view($view, $data = []) {
        // Extraer los datos para que estén disponibles en la vista como variables
        if(!empty($data)) {
            extract($data);
        }
        
        // Cargar las plantillas de encabezado y pie de página
        $viewFile = __DIR__ . '/../View/' . $view . '.php';
        
        if(file_exists($viewFile)) {
            // Cargar el encabezado
            require_once __DIR__ . '/../View/templates/header.php';
            
            // Cargar la vista principal
            require_once $viewFile;
            
            // Cargar el pie de página
            require_once __DIR__ . '/../View/templates/footer.php';
        } else {
            die("Vista no encontrada: " . $viewFile);
        }
    }
    
    /**
     * Redirecciona a una URL específica
     * 
     * @param string $url URL a la que redirigir
     * @return void
     */
    protected function redirect($url) {
        header("Location: " . $url);
        exit;
    }
    
    /**
     * Verifica si el usuario está autenticado
     * 
     * @return bool True si el usuario está autenticado, false en caso contrario
     */
    protected function isLoggedIn() {
        return isset($_SESSION['correo']);
    }
    
    /**
     * Obtiene información del usuario autenticado
     * 
     * @return array|null Información del usuario o null si no está autenticado
     */
    protected function getLoggedInUser() {
        if($this->isLoggedIn()) {
            return [
                'correo' => $_SESSION['correo'],
                // Aquí puedes agregar más información del usuario si está disponible en la sesión
            ];
        }
        return null;
    }
}
?>

<?php
/**
 * HomeController - Controlador para la página de inicio
 */
require_once __DIR__ . '/BaseController.php';

class HomeController extends BaseController {
    /**
     * Constructor de la clase HomeController
     */
    public function __construct() {
        // Inicializar el controlador
    }
    
    /**
     * Método principal que maneja la página de inicio
     */
    public function index() {
        // Preparar los datos para la vista
        $data = [
            'title' => 'Ethos Coffe - Inicio',
            'isLoggedIn' => $this->isLoggedIn(),
            'user' => $this->getLoggedInUser(),
            'featuredProducts' => $this->getFeaturedProducts()
        ];
        
        // Cargar la vista de inicio
        $this->view('home/index', $data);
    }
    
    /**
     * Obtiene los productos destacados para mostrar en la página de inicio
     * En una implementación real, esto podría venir de una base de datos
     * 
     * @return array Lista de productos destacados
     */
    private function getFeaturedProducts() {
        // En un sistema real, estos datos vendrían de un modelo
        return [
            [
                'id' => 1,
                'name' => 'Producto Premium',
                'description' => 'Disfruta de nuestros productos de la más alta calidad.',
                'price' => 99.99,
                'image' => '/api/placeholder/400/400'
            ],
            [
                'id' => 2,
                'name' => 'Oferta Especial',
                'description' => 'Aprovecha nuestras ofertas por tiempo limitado.',
                'price' => 79.99,
                'image' => '/api/placeholder/400/400'
            ],
            [
                'id' => 3,
                'name' => 'Recién Llegado',
                'description' => 'Descubre nuestros productos más recientes.',
                'price' => 129.99,
                'image' => '/api/placeholder/400/400'
            ],
            [
                'id' => 4,
                'name' => 'Producto Destacado',
                'description' => 'Uno de nuestros productos más populares.',
                'price' => 149.99,
                'image' => '/api/placeholder/400/400'
            ]
        ];
    }
}
?>

Ahora, vamos a crear las plantillas de vista necesarias, comenzando con el header y footer:

<?php
/**
 * Plantilla de encabezado compartida para todas las páginas
 */
?>
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><?php echo isset($title) ? $title : 'Ethos Coffe'; ?></title>
    <link rel="stylesheet" type="text/css" href="/estilos/styles.css">
    <link rel="stylesheet" href="/CSS/index.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>
    <header>
        <nav class="navbar">
            <div class="logo-container">
                <img src="/Logo1.png" alt="Ethos Coffe">
            </div>
            <ul class="nav-links">
                <li><a href="/"><b>Inicio</b></a></li>
                <li><a href="/Servicios.html"><b>Servicios</b></a></li>
                <li><a href="/PHP/productos.php"><b>Productos</b></a></li>
                <li><a href="/Ayuda.html"><b>Ayuda</b></a></li>
                <li>
                    <?php if (isset($isLoggedIn) && $isLoggedIn): ?>
                        <a href="/PHP/visual_datos.php"><b>Perfil</b></a>
                    <?php else: ?>
                        <a href="/login.html"><b>Iniciar Sesión</b></a>
                    <?php endif; ?>
                </li>
            </ul>
        </nav>
    </header>


Footer.php
<?php
/**
 * Plantilla de pie de página compartida para todas las páginas
 */
?>
    <div id="mensaje-confirmacion"></div>

    <footer>
        <div class="footer-main">
            <div class="footer-column">
                <h3><i>👤</i> Mi cuenta</h3>
                <ul class="footer-links">
                    <li><a href="/login.html">Iniciar sesión</a></li>
                    <li><a href="/registro.html">Registrarse</a></li>
                    <li><a href="/PHP/visual_datos.php">Mi perfil</a></li>
                </ul>
            </div>
            
            <div class="footer-column">
                <h3><i>🏠</i> Nuestros Servicios</h3>
                <ul class="footer-links">
                    <li><a href="/Servicios.html">Catálogo de servicios</a></li>
                    <li><a href="/Ayuda.html">Ayuda</a></li>
                    <li><a href="#">Contacto</a></li>
                </ul>
            </div>
            
            <div class="footer-column">
                <h3><i>🛒</i> Productos</h3>
                <ul class="footer-links">
                    <li><a href="/PHP/productos.php">Ver productos</a></li>
                    <li><a href="#">Métodos de pago</a></li>
                    <li><a href="#">Envíos</a></li>
                    <li><a href="#">Devoluciones</a></li>
                </ul>
            </div>
            
            <div class="footer-column">
                <h3>¿Necesitas ayuda?</h3>
                <p>Estamos aquí para ayudarte con cualquier duda o problema.</p>
                <a href="/Ayuda.html" class="contact-btn">Contáctanos</a>
            </div>
        </div>
        
        <div class="footer-bottom">
            <p>&copy; <?php echo date('Y'); ?> Ethos Coffe. Todos los derechos reservados.</p>
        </div>
    </footer>

    <script src="/JavaScript/Java1.js"></script>
</body>
</html>

Finalmente, creemos la vista principal para la página de inicio:

<?php
/**
 * Vista principal para la página de inicio
 */
?>
<section class="hero">
    <video id="background-video" autoplay loop muted>
        <source src="/video1.mp4" type="video/mp4">
    </video>
    <div class="hero-content">
        <h2>Bienvenidos a Ethos Coffe</h2>
        <p>Tu destino para una experiencia de compra excepcional.</p>
        <a href="/PHP/productos.php" class="btn">Ver Productos</a>
    </div>
</section>

<section class="section" id="servicios">
    <div class="container">
        <div class="section-title">
            <h2>Nuestros Servicios</h2>
        </div>
        <div class="services-grid">
            <div class="service-card">
                <h3>Productos de Alta Calidad</h3>
                <p>Ofrecemos una amplia gama de productos con descripciones detalladas para que conozcas exactamente lo que estás comprando.</p>
            </div>
            
            <div class="service-card">
                <h3>Envío Rápido</h3>
                <p>Entendemos que quieres recibir tus productos lo antes posible. Te proporcionamos estimaciones realistas de tiempo de entrega.</p>
            </div>
            
            <div class="service-card">
                <h3>Atención al Cliente</h3>
                <p>Nuestro equipo está disponible para resolver todas tus dudas y preocupaciones a través de correo electrónico o teléfono.</p>
            </div>
        </div>
    </div>
</section>

<section class="section featured-products">
    <div class="container">
        <div class="section-title">
            <h2>Productos Destacados</h2>
        </div>
        <div class="products-grid">
            <?php foreach ($featuredProducts as $product): ?>
            <div class="product-card">
                <div class="product-img">
                    <img src="<?php echo htmlspecialchars($product['image']); ?>" alt="<?php echo htmlspecialchars($product['name']); ?>">
                </div>
                <div class="product-info">
                    <h3><?php echo htmlspecialchars($product['name']); ?></h3>
                    <p><?php echo htmlspecialchars($product['description']); ?></p>
                    <div class="price">$<?php echo number_format($product['price'], 2); ?></div>
                </div>
            </div>
            <?php endforeach; ?>
        </div>
    </div>
</section>








