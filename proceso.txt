Parece que estás teniendo un problema con la forma en que el Router está interpretando la URL. Veo que está buscando un controlador llamado "Index.phpController.php", lo cual no es correcto. Vamos a arreglar este problema y asegurarnos de que la estructura MVC funcione correctamente.
Diagnóstico del problema
El error ocurre porque el Router está interpretando incorrectamente la URL /index.php. Está tomando "index.php" como el nombre del controlador en lugar de reconocerlo como la página principal.
Solución
Vamos a modificar el Router para que maneje correctamente las rutas, especialmente cuando la URL incluye "index.php". Aquí tienes una versión corregida del Router:
<?php
/**
 * Router - Clase encargada de enrutar las peticiones HTTP a los controladores correspondientes
 */
class Router {
    // Variable para activar/desactivar mensajes de depuración
    private $debug = true;
    
    /**
     * Constructor de la clase Router
     */
    public function __construct() {
        if ($this->debug) {
            $this->debugLog("Inicializando Router");
        }
    }
    
    /**
     * Método de depuración para mostrar mensajes
     * 
     * @param mixed $message Mensaje o datos para mostrar
     * @return void
     */
    private function debugLog($message) {
        if ($this->debug) {
            echo '<div style="background: #f8f9fa; border: 1px solid #ddd; padding: 10px; margin: 5px; font-family: monospace;">';
            echo "Debug: ";
            if (is_array($message) || is_object($message)) {
                echo '<pre>';
                print_r($message);
                echo '</pre>';
            } else {
                echo $message;
            }
            echo '</div>';
        }
    }
    
    /**
     * Método para analizar la URL y dirigir la solicitud al controlador adecuado
     */
    public function dispatch() {
        // Obtener la URL solicitada
        $requestUrl = isset($_SERVER['REQUEST_URI']) ? $_SERVER['REQUEST_URI'] : '/';
        
        // Eliminar parámetros GET de la URL
        $requestUrl = strtok($requestUrl, '?');
        
        // Eliminar la parte base de la URL
        $basePath = str_replace('\\', '/', dirname($_SERVER['SCRIPT_NAME']));
        if($basePath != '/' && $basePath != '\\') {
            $requestUrl = substr($requestUrl, strlen($basePath));
        }
        
        $this->debugLog("URL solicitada: " . $requestUrl);
        $this->debugLog("Base Path: " . $basePath);
        
        // Si la URL termina con index.php o es similar a la raíz, cargar la página de inicio
        if(empty($requestUrl) || $requestUrl == '/' || $requestUrl == '/index.php' || $requestUrl == 'index.php') {
            $this->debugLog("Cargando página de inicio...");
            
            // Buscar HomeController en múltiples ubicaciones posibles
            $controllerPaths = [
                __DIR__ . '/Controller/HomeController.php',
                dirname(__DIR__) . '/core/Controller/HomeController.php',
                dirname(dirname(__DIR__)) . '/core/Controller/HomeController.php',
                $_SERVER['DOCUMENT_ROOT'] . '/pruebas-ds/src/core/Controller/HomeController.php'
            ];
            
            $controllerFound = false;
            
            foreach ($controllerPaths as $path) {
                $this->debugLog("Buscando controlador en: " . $path);
                
                if(file_exists($path)) {
                    $this->debugLog("¡Controlador encontrado! Cargando: " . $path);
                    require_once $path;
                    
                    if(class_exists('HomeController')) {
                        $controller = new HomeController();
                        if(method_exists($controller, 'index')) {
                            $controller->index();
                            $controllerFound = true;
                            break;
                        } else {
                            $this->debugLog("Error: El método 'index' no existe en HomeController");
                        }
                    } else {
                        $this->debugLog("Error: La clase 'HomeController' no está definida en el archivo");
                    }
                }
            }
            
            if (!$controllerFound) {
                $this->debugLog("No se pudo encontrar el controlador. Mostrando página de inicio temporal.");
                $this->showFallbackHome();
            }
            
            return;
        }
        
        // Dividir la URL en segmentos
        $segments = explode('/', trim($requestUrl, '/'));
        
        // El primer segmento es el controlador
        $controllerName = ucfirst(strtolower($segments[0])) . 'Controller';
        
        // Buscar el controlador en múltiples ubicaciones posibles
        $controllerPaths = [
            __DIR__ . '/Controller/' . $controllerName . '.php',
            dirname(__DIR__) . '/core/Controller/' . $controllerName . '.php',
            dirname(dirname(__DIR__)) . '/core/Controller/' . $controllerName . '.php',
            $_SERVER['DOCUMENT_ROOT'] . '/pruebas-ds/src/core/Controller/' . $controllerName . '.php'
        ];
        
        $controllerFound = false;
        
        foreach ($controllerPaths as $controllerFile) {
            $this->debugLog("Buscando controlador: " . $controllerFile);
            
            if(file_exists($controllerFile)) {
                $this->debugLog("Controlador encontrado: " . $controllerFile);
                require_once $controllerFile;
                
                if(class_exists($controllerName)) {
                    $controller = new $controllerName();
                    
                    // El segundo segmento es la acción (método) 
                    $action = isset($segments[1]) ? strtolower($segments[1]) : 'index';
                    
                    // Verificar si el método existe
                    if(method_exists($controller, $action)) {
                        // Llamar al método del controlador
                        call_user_func([$controller, $action]);
                        $controllerFound = true;
                        break;
                    } else {
                        $this->debugLog("Error: El método '$action' no existe en $controllerName");
                    }
                } else {
                    $this->debugLog("Error: La clase '$controllerName' no está definida en el archivo");
                }
            }
        }
        
        if (!$controllerFound) {
            // Controlador o método no encontrado
            $this->notFound();
        }
    }
    
    /**
     * Método para mostrar una página de inicio temporal
     */
    private function showFallbackHome() {
        echo '<!DOCTYPE html>
        <html lang="es">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Ethos Coffe - Inicio</title>
            <style>
                body { 
                    font-family: Arial, sans-serif; 
                    line-height: 1.6;
                    margin: 0;
                    padding: 20px;
                    color: #333;
                }
                .container { 
                    max-width: 1200px; 
                    margin: 0 auto; 
                    padding: 20px;
                }
                .hero { 
                    background-color: #f5f5f5;
                    padding: 50px 20px;
                    text-align: center;
                    margin-bottom: 30px;
                }
                h1 { color: #5D4037; }
                .btn {
                    display: inline-block;
                    background-color: #795548;
                    color: white;
                    padding: 10px 20px;
                    text-decoration: none;
                    border-radius: 5px;
                    margin-top: 20px;
                }
                .features {
                    display: flex;
                    flex-wrap: wrap;
                    justify-content: space-between;
                    margin-bottom: 30px;
                }
                .feature {
                    flex: 0 0 30%;
                    margin-bottom: 20px;
                    padding: 20px;
                    background-color: #f9f9f9;
                    border-radius: 5px;
                }
                footer {
                    background-color: #333;
                    color: white;
                    text-align: center;
                    padding: 20px;
                    margin-top: 40px;
                }
                @media (max-width: 768px) {
                    .feature {
                        flex: 0 0 100%;
                    }
                }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="hero">
                    <h1>Bienvenido a Ethos Coffe</h1>
                    <p>Tu destino para una experiencia de café excepcional.</p>
                    <a href="/PHP/productos.php" class="btn">Ver Productos</a>
                </div>
                
                <div class="features">
                    <div class="feature">
                        <h3>Productos de Alta Calidad</h3>
                        <p>Ofrecemos una amplia gama de productos con descripciones detalladas para que conozcas exactamente lo que estás comprando.</p>
                    </div>
                    
                    <div class="feature">
                        <h3>Envío Rápido</h3>
                        <p>Entendemos que quieres recibir tus productos lo antes posible. Te proporcionamos estimaciones realistas de tiempo de entrega.</p>
                    </div>
                    
                    <div class="feature">
                        <h3>Atención al Cliente</h3>
                        <p>Nuestro equipo está disponible para resolver todas tus dudas y preocupaciones a través de correo electrónico o teléfono.</p>
                    </div>
                </div>
                
                <div>
                    <h2>Estamos trabajando en nuestro nuevo sitio</h2>
                    <p>Pronto tendremos disponible una experiencia de compra mejorada con nuestra nueva estructura MVC.</p>
                </div>
            </div>
            
            <footer>
                <p>&copy; ' . date('Y') . ' Ethos Coffe. Todos los derechos reservados.</p>
            </footer>
        </body>
        </html>';
    }
    
    /**
     * Método para manejar URLs no encontradas
     */
    private function notFound() {
        // Establecer el código de estado HTTP 404
        header("HTTP/1.0 404 Not Found");
        
        // Cargar una vista de error 404
        echo '<!DOCTYPE html>
        <html lang="es">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Error 404 - Página no encontrada</title>
            <style>
                body {
                    font-family: Arial, sans-serif;
                    line-height: 1.6;
                    color: #333;
                    max-width: 800px;
                    margin: 0 auto;
                    padding: 20px;
                    text-align: center;
                }
                h1 { color: #d32f2f; }
                .error-container {
                    background-color: #f5f5f5;
                    border-radius: 5px;
                    padding: 20px;
                    margin: 30px 0;
                }
                .back-link {
                    display: inline-block;
                    background-color: #795548;
                    color: white;
                    padding: 10px 20px;
                    text-decoration: none;
                    border-radius: 5px;
                    margin-top: 20px;
                }
                .debug-info {
                    margin-top: 30px;
                    text-align: left;
                    font-size: 14px;
                    background-color: #f9f9f9;
                    padding: 15px;
                    border-radius: 5px;
                }
            </style>
        </head>
        <body>
            <div class="error-container">
                <h1>Error 404 - Página no encontrada</h1>
                <p>Lo sentimos, la página que estás buscando no existe o ha sido movida.</p>
                <a href="/" class="back-link">Volver a la página de inicio</a>
            </div>';
            
        if ($this->debug) {
            echo '<div class="debug-info">
                <h3>Información de depuración:</h3>
                <p><strong>URL solicitada:</strong> ' . $_SERVER['REQUEST_URI'] . '</p>
                <p><strong>Script actual:</strong> ' . $_SERVER['SCRIPT_NAME'] . '</p>
                <p><strong>Document Root:</strong> ' . $_SERVER['DOCUMENT_ROOT'] . '</p>
                <p><strong>Base Path:</strong> ' . dirname($_SERVER['SCRIPT_NAME']) . '</p>
            </div>';
        }
            
        echo '</body>
        </html>';
        exit;
    }
}

Ahora vamos a crear los archivos necesarios para completar la estructura MVC. Primero, creemos un controlador base adecuado:
<?php
/**
 * BaseController - Controlador base del que heredan todos los controladores
 * Proporciona funcionalidad común como la carga de vistas
 */
class BaseController {
    /**
     * Carga una vista y la renderiza con los datos proporcionados
     * 
     * @param string $view Nombre de la vista a cargar
     * @param array $data Datos a pasar a la vista
     * @return void
     */
    protected function view($view, $data = []) {
        // Extraer los datos para que estén disponibles en la vista como variables
        if(!empty($data)) {
            extract($data);
        }
        
        // Verificar las posibles ubicaciones de las vistas
        $possibleViewPaths = [
            __DIR__ . '/../View/' . $view . '.php',
            dirname(__DIR__) . '/View/' . $view . '.php',
            dirname(dirname(__DIR__)) . '/core/View/' . $view . '.php',
            $_SERVER['DOCUMENT_ROOT'] . '/pruebas-ds/src/core/View/' . $view . '.php'
        ];
        
        $viewFound = false;
        $viewFile = null;
        
        foreach ($possibleViewPaths as $path) {
            if(file_exists($path)) {
                $viewFile = $path;
                $viewFound = true;
                break;
            }
        }
        
        if($viewFound) {
            // Buscar las ubicaciones de las plantillas
            $headerPaths = [
                __DIR__ . '/../View/templates/header.php',
                dirname(__DIR__) . '/View/templates/header.php',
                dirname(dirname(__DIR__)) . '/core/View/templates/header.php',
                $_SERVER['DOCUMENT_ROOT'] . '/pruebas-ds/src/core/View/templates/header.php'
            ];
            
            $footerPaths = [
                __DIR__ . '/../View/templates/footer.php',
                dirname(__DIR__) . '/View/templates/footer.php',
                dirname(dirname(__DIR__)) . '/core/View/templates/footer.php',
                $_SERVER['DOCUMENT_ROOT'] . '/pruebas-ds/src/core/View/templates/footer.php'
            ];
            
            // Buscar el header
            $headerFound = false;
            foreach ($headerPaths as $headerPath) {
                if(file_exists($headerPath)) {
                    require_once $headerPath;
                    $headerFound = true;
                    break;
                }
            }
            
            if(!$headerFound) {
                echo "<div style='background: #f8f9fa; border: 1px solid #ddd; padding: 10px; margin: 5px;'>";
                echo "Advertencia: No se encontró la plantilla de encabezado.";
                echo "</div>";
            }
            
            // Cargar la vista principal
            require_once $viewFile;
            
            // Buscar el footer
            $footerFound = false;
            foreach ($footerPaths as $footerPath) {
                if(file_exists($footerPath)) {
                    require_once $footerPath;
                    $footerFound = true;
                    break;
                }
            }
            
            if(!$footerFound) {
                echo "<div style='background: #f8f9fa; border: 1px solid #ddd; padding: 10px; margin: 5px;'>";
                echo "Advertencia: No se encontró la plantilla de pie de página.";
                echo "</div>";
            }
        } else {
            echo "<div style='background: #f8f9fa; border: 1px solid #ddd; padding: 10px; margin: 5px;'>";
            echo "Error: Vista no encontrada - " . $view;
            echo "<hr>";
            echo "Ubicaciones buscadas:";
            echo "<ul>";
            foreach ($possibleViewPaths as $path) {
                echo "<li>" . $path . "</li>";
            }
            echo "</ul>";
            echo "</div>";
        }
    }
    
    /**
     * Redirecciona a una URL específica
     * 
     * @param string $url URL a la que redirigir
     * @return void
     */
    protected function redirect($url) {
        header("Location: " . $url);
        exit;
    }
    
    /**
     * Verifica si el usuario está autenticado
     * 
     * @return bool True si el usuario está autenticado, false en caso contrario
     */
    protected function isLoggedIn() {
        return isset($_SESSION['correo']);
    }
    
    /**
     * Obtiene información del usuario autenticado
     * 
     * @return array|null Información del usuario o null si no está autenticado
     */
    protected function getLoggedInUser() {
        if($this->isLoggedIn()) {
            return [
                'correo' => $_SESSION['correo'],
                // Aquí puedes agregar más información del usuario si está disponible en la sesión
            ];
        }
        return null;
    }
}

Ahora, vamos a crear el controlador específico para la página de inicio:

<?php
/**
 * HomeController - Controlador para la página de inicio
 */
require_once __DIR__ . '/BaseController.php';

class HomeController extends BaseController {
    /**
     * Constructor de la clase HomeController
     */
    public function __construct() {
        // Inicializar el controlador
        if (session_status() == PHP_SESSION_NONE) {
            session_start();
        }
    }
    
    /**
     * Método principal que maneja la página de inicio
     */
    public function index() {
        // Preparar los datos para la vista
        $data = [
            'title' => 'Ethos Coffe - Inicio',
            'isLoggedIn' => $this->isLoggedIn(),
            'user' => $this->getLoggedInUser(),
            'featuredProducts' => $this->getFeaturedProducts()
        ];
        
        // Cargar la vista de inicio
        $this->view('home/index', $data);
    }
    
    /**
     * Obtiene los productos destacados para mostrar en la página de inicio
     * En una implementación real, esto podría venir de una base de datos
     * 
     * @return array Lista de productos destacados
     */
    private function getFeaturedProducts() {
        // En un sistema real, estos datos vendrían de un modelo
        return [
            [
                'id' => 1,
                'name' => 'Café Artesanal Premium',
                'description' => 'Disfruta de nuestro café de especialidad de la más alta calidad.',
                'price' => 99.99,
                'image' => '/api/placeholder/400/400'
            ],
            [
                'id' => 2,
                'name' => 'Pack Degustación',
                'description' => 'Prueba nuestra selección de cafés de diferentes orígenes.',
                'price' => 79.99,
                'image' => '/api/placeholder/400/400'
            ],
            [
                'id' => 3,
                'name' => 'Café Orgánico',
                'description' => 'Café cultivado respetando el medio ambiente, sin pesticidas.',
                'price' => 129.99,
                'image' => '/api/placeholder/400/400'
            ],
            [
                'id' => 4,
                'name' => 'Accesorios para Café',
                'description' => 'Todo lo que necesitas para preparar el café perfecto en casa.',
                'price' => 149.99,
                'image' => '/api/placeholder/400/400'
            ]
        ];
    }
}


Ahora, vamos a crear las plantillas para la vista:

<?php
/**
 * Plantilla de encabezado compartida para todas las páginas
 */
?>
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><?php echo isset($title) ? $title : 'Ethos Coffe'; ?></title>
    <link rel="stylesheet" type="text/css" href="/CSS/index.css">
    <!-- Asegúrate de que esta ruta sea correcta -->
    <?php if (file_exists($_SERVER['DOCUMENT_ROOT'] . '/Logo1.png')): ?>
    <!-- El logo existe -->
    <?php else: ?>
    <style>
        /* Estilo temporal si el logo no existe */
        .logo-container {
            font-size: 24px;
            font-weight: bold;
            color: #5D4037;
        }
    </style>
    <?php endif; ?>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>
    <header>
        <nav class="navbar">
            <div class="logo-container">
                <?php if (file_exists($_SERVER['DOCUMENT_ROOT'] . '/Logo1.png')): ?>
                <img src="/Logo1.png" alt="Ethos Coffe">
                <?php else: ?>
                <!-- Alternativa si el logo no existe -->
                Ethos Coffe
                <?php endif; ?>
            </div>
            <ul class="nav-links">
                <li><a href="/"><b>Inicio</b></a></li>
                <li><a href="/Servicios.html"><b>Servicios</b></a></li>
                <li><a href="/PHP/productos.php"><b>Productos</b></a></li>
                <li><a href="/Ayuda.html"><b>Ayuda</b></a></li>
                <li>
                    <?php if (isset($isLoggedIn) && $isLoggedIn): ?>
                        <a href="/PHP/visual_datos.php"><b>Perfil</b></a>
                    <?php else: ?>
                        <a href="/login.html"><b>Iniciar Sesión</b></a>
                    <?php endif; ?>
                </li>
            </ul>
        </nav>
    </header>
    <main class="container"><?php // El main se cerrará en el footer ?>

</main><!-- Cierre del main abierto en el header -->
    
    <footer>
        <div class="footer-content">
            <div class="footer-section">
                <h3>Sobre Nosotros</h3>
                <p>Ethos Coffe es tu destino para disfrutar de los mejores cafés de especialidad y productos relacionados con el café. Nos enfocamos en la calidad y sostenibilidad.</p>
            </div>
            
            <div class="footer-section">
                <h3>Enlaces Rápidos</h3>
                <ul>
                    <li><a href="/">Inicio</a></li>
                    <li><a href="/Servicios.html">Servicios</a></li>
                    <li><a href="/PHP/productos.php">Productos</a></li>
                    <li><a href="/Ayuda.html">Contacto</a></li>
                </ul>
            </div>
            
            <div class="footer-section">
                <h3>Contacto</h3>
                <p>Email: info@ethoscoffe.com</p>
                <p>Teléfono: (123) 456-7890</p>
            </div>
        </div>
        
        <div class="footer-bottom">
            <p>&copy; <?php echo date('Y'); ?> Ethos Coffe. Todos los derechos reservados.</p>
        </div>
    </footer>

    <!-- Scripts adicionales aquí si son necesarios -->
    <script>
        // Código JavaScript común a todas las páginas si es necesario
    </script>
</body>
</html>



<?php
/**
 * Vista principal para la página de inicio de Ethos Coffe
 */
?>

<div class="hero-section">
    <div class="hero-content">
        <h1>Bienvenido a Ethos Coffe</h1>
        <p>Descubre nuestra selección de café de alta calidad y accesorios para verdaderos amantes del café.</p>
        <a href="/PHP/productos.php" class="btn btn-primary">Ver Productos</a>
    </div>
</div>

<section class="features-section">
    <h2>¿Por qué elegir Ethos Coffe?</h2>
    
    <div class="features-container">
        <div class="feature-card">
            <div class="feature-icon">
                <!-- Se puede reemplazar con un ícono real -->
                <div class="icon-placeholder">☕</div>
            </div>
            <h3>Café de Especialidad</h3>
            <p>Ofrecemos café de alta calidad, cultivado de manera ética y sostenible.</p>
        </div>
        
        <div class="feature-card">
            <div class="feature-icon">
                <div class="icon-placeholder">🚚</div>
            </div>
            <h3>Envío Rápido</h3>
            <p>Entregamos tus productos en el menor tiempo posible para que disfrutes de tu café sin esperas.</p>
        </div>
        
        <div class="feature-card">
            <div class="feature-icon">
                <div class="icon-placeholder">👨‍👩‍👧‍👦</div>
            </div>
            <h3>Atención Personalizada</h3>
            <p>Nuestro equipo está siempre dispuesto a ayudarte con cualquier duda o consulta.</p>
        </div>
    </div>
</section>

<section class="featured-products">
    <h2>Productos Destacados</h2>
    
    <div class="products-container">
        <?php if(isset($featuredProducts) && !empty($featuredProducts)): ?>
            <?php foreach($featuredProducts as $product): ?>
                <div class="product-card">
                    <div class="product-image">
                        <?php if(isset($product['image'])): ?>
                            <img src="<?php echo $product['image']; ?>" alt="<?php echo $product['name']; ?>">
                        <?php else: ?>
                            <div class="image-placeholder"></div>
                        <?php endif; ?>
                    </div>
                    <div class="product-info">
                        <h3><?php echo $product['name']; ?></h3>
                        <p><?php echo $product['description']; ?></p>
                        <div class="product-price">$<?php echo number_format($product['price'], 2); ?></div>
                        <a href="/PHP/productoDetalle.php?id=<?php echo $product['id']; ?>" class="btn btn-secondary">Ver Detalles</a>